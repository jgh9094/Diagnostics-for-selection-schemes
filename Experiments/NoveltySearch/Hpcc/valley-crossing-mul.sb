#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=6:00:00                # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-350                   # number of jobs being created, each with its array id
#SBATCH --mem=3G                      # memory required per node - amount of memory (in gigs)
#SBATCH --job-name nov-val3           # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab             # research group account being used

##################################
# Setup required dependencies
##################################
module load GCC/10.2.0; module load CUDA/11.1.1; module load Clang/11.0.1;

##################################
# Setup relevant directories
##################################
DATA_DIR=/mnt/gs21/scratch/herna383/DIAGNOSTICS-MVC-1-6/NOVELTY

##################################
# Setup random seed info
##################################
PROBLEM_SEED_OFFSET=42000
SEED_OFFSET=200000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET + SEED_OFFSET))

##################################
# Setup tournament size
##################################
T__2=2

##################################
# Set up fitness sharing prportion
##################################
NOV__0=0
NOV__1=1
NOV__3=2
NOV__6=4
NOV__12=8
NOV__25=15
NOV__50=30

##################################
# Folder naming
##################################
DIAGNOSTIC_0=EXPLOITATION_RATE
DIAGNOSTIC_1=ORDERED_EXPLOITATION
DIAGNOSTIC_2=CONTRADICTORY_OBJECTIVES
DIAGNOSTIC_3=MULTIPATH_EXPLORATION

##################################
# Setup selection scheme
##################################
TRUNCATION=0
TOURNAMENT=1
FITSHARING=2
LEXICASE=3
NONDOMINATED=4
NOVELTY=5

##################################
# Setup diagnostic
##################################
EXPLOITATION_RATE=0
ORDERED_EXPLOITATION=1
CONTRADICTORY_OBJECTIVES=2
MULTIPATH_EXPLORATION=3

###### Treatments #######
TREATMENT__NOV__0__MIN=1
TREATMENT__NOV__0__MAX=50

TREATMENT__NOV__1__MIN=51
TREATMENT__NOV__1__MAX=100

TREATMENT__NOV__3__MIN=101
TREATMENT__NOV__3__MAX=150

TREATMENT__NOV__6__MIN=151
TREATMENT__NOV__6__MAX=200

TREATMENT__NOV__12__MIN=201
TREATMENT__NOV__12__MAX=250

TREATMENT__NOV__25__MIN=251
TREATMENT__NOV__25__MAX=300

TREATMENT__NOV__50__MIN=301
TREATMENT__NOV__50__MAX=350

##################################
# Config file parameters
##################################
DIMENSIONALITY=100
ACCURACY=.99
GENERATIONS=50000
ACCURACY_DIR=99

####################################################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__0__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__0__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__0}__SEED_${SEED}__MVC
  NOV=${NOV__0}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__1__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__1__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__1}__SEED_${SEED}__MVC
  NOV=${NOV__1}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__3__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__3__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__3}__SEED_${SEED}__MVC
  NOV=${NOV__3}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__6__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__6__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__6}__SEED_${SEED}__MVC
  NOV=${NOV__6}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__12__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__12__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__12}__SEED_${SEED}__MVC
  NOV=${NOV__12}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__25__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__25__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__25}__SEED_${SEED}__MVC
  NOV=${NOV__25}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__50__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__50__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__50}__SEED_${SEED}__MVC
  NOV=${NOV__50}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__NOV__100__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__NOV__100__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_3}__NOV_${NOV__100}__SEED_${SEED}__MVC
  NOV=${NOV__100}

else
  echo "${SEED} from ${PROBLEM} failed to launch" >> /mnt/ls15/scratch/users/herna383/ps-coh-failtolaunch.txt
fi

####################################################################

RUN_DIR=${DATA_DIR}/TRT_${DIMENSIONALITY}__ACC_${ACCURACY_DIR}__GEN_${GENERATIONS}/${NAME}/

# make a run directory
mkdir -p ${RUN_DIR}

echo "../../../dia_world -SEED ${SEED} -DIAGNOSTIC ${MULTIPATH_EXPLORATION} -SELECTION ${NOVELTY} -NOVEL_K ${NOV} -OUTPUT_DIR ${RUN_DIR} -TOUR_SIZE ${T__2} -DIMENSIONALITY ${DIMENSIONALITY} -ACCURACY ${ACCURACY} -MAX_GENS ${GENERATIONS} -VALLEY_CROSSING 1 > run.log" > ./cmd-coh.txt

../../../dia_world -SEED ${SEED} -DIAGNOSTIC ${MULTIPATH_EXPLORATION} -SELECTION ${NOVELTY} -NOVEL_K ${NOV} -OUTPUT_DIR ${RUN_DIR} -TOUR_SIZE ${T__2} -DIMENSIONALITY ${DIMENSIONALITY} -ACCURACY ${ACCURACY} -MAX_GENS ${GENERATIONS} -VALLEY_CROSSING 1
