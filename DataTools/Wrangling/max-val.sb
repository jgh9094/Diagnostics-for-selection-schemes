#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=00:20:00               # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-35                  # number of jobs being created, each with its array id
#SBATCH --mem=1G                      # memory required per node - amount of memory (in gigs)
#SBATCH --job-name max-dat            # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab             # research group account being used

##################################
# SETUP RELEVANT DIRECTORIES
##################################
DATA_DIR=/mnt/gs21/scratch/herna383/DIAGNOSTICS-DATA-10-21/

##################################
# SETUP RELEVANT DIRECTORIES
##################################
SEED_OFFSET=200000
SLURM_ID=$((SLURM_ARRAY_TASK_ID))

##################################
# Setup selection scheme
##################################
TRUNCATION=0
TOURNAMENT=1
FITSHARING=2
LEXICASE=3
NONDOMINATED=4
NOVELTY=5

##################################
# Setup diagnostic
##################################
EXPLOITATION_RATE=0
ORDERED_EXPLOITATION=1
CONTRADICTORY_OBJECTIVES=2
MULTIPATH_EXPLORATION=3
MULTIVALLEY_CROSSING=4

##################################
# TREATMENTS
##################################

# TRUNCATION REPLICATES
TREATMENT__1__1=1
TREATMENT__1__2=2
TREATMENT__1__3=3
TREATMENT__1__4=4
TREATMENT__1__5=5

# TOURNAMENTS REPLICATES
TREATMENT__2__1=6
TREATMENT__2__2=7
TREATMENT__2__3=8
TREATMENT__2__4=9
TREATMENT__2__5=10

# LEXICASE REPLICATES
TREATMENT__3__1=11
TREATMENT__3__2=12
TREATMENT__3__3=13
TREATMENT__3__4=14
TREATMENT__3__5=15

# NOVELTY REPLICATES
TREATMENT__4__1=16
TREATMENT__4__2=17
TREATMENT__4__3=18
TREATMENT__4__4=19
TREATMENT__4__5=20

# NONDOMINATED SORTING REPLICATES
TREATMENT__5__1=21
TREATMENT__5__2=22
TREATMENT__5__3=23
TREATMENT__5__4=24
TREATMENT__5__5=25

# G FITNESS SHARING REPLICATES
TREATMENT__6__1=26
TREATMENT__6__2=27
TREATMENT__6__3=28
TREATMENT__6__4=29
TREATMENT__6__5=30

# P FITNESS SHARING REPLICATES
TREATMENT__7__1=31
TREATMENT__7__2=32
TREATMENT__7__3=33
TREATMENT__7__4=34
TREATMENT__7__5=35

##################################
# Other variables needed
##################################
RESOLUTION=100
OBJECTIVE_CNT=100
GENERATIONS=50000
ACCURACY_DIR=99

####################################################################

if [ ${SLURM_ID} -eq ${TREATMENT__1__1} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TRUNCATION/
  SEED=24000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__2} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TRUNCATION/
  SEED=25000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__3} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TRUNCATION/
  SEED=26000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__4} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TRUNCATION/
  SEED=27000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__5} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TRUNCATION/
  SEED=31000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${TRUNCATION}

elif [ ${SLURM_ID} -eq ${TREATMENT__2__1} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TOURNAMENT/
  SEED=20000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__2} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TOURNAMENT/
  SEED=21000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__3} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TOURNAMENT/
  SEED=22000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__4} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TOURNAMENT/
  SEED=23000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__5} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/TOURNAMENT/
  SEED=30000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${TOURNAMENT}

elif [ ${SLURM_ID} -eq ${TREATMENT__3__1} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/LEXICASE/
  SEED=8000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__2} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/LEXICASE/
  SEED=9000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__3} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/LEXICASE/
  SEED=10000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__4} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/LEXICASE/
  SEED=11000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__5} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/LEXICASE/
  SEED=35000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${LEXICASE}

elif [ ${SLURM_ID} -eq ${TREATMENT__4__1} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NOVELTY/
  SEED=16000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__2} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NOVELTY/
  SEED=17000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__3} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NOVELTY/
  SEED=18000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__4} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NOVELTY/
  SEED=19000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__5} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NOVELTY/
  SEED=34000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${NOVELTY}

elif [ ${SLURM_ID} -eq ${TREATMENT__5__1} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NONDOMINATED/
  SEED=12000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__2} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NONDOMINATED/
  SEED=13000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__3} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NONDOMINATED/
  SEED=14000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__4} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NONDOMINATED/
  SEED=15000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__5} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/NONDOMINATED/
  SEED=36000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${NONDOMINATED}

elif [ ${SLURM_ID} -eq ${TREATMENT__6__1} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_G/
  SEED=0
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__2} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_G/
  SEED=1000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__3} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_G/
  SEED=2000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__4} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_G/
  SEED=3000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__5} ] ; then
  SECOND_PARAM=0
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_G/
  SEED=32000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${FITSHARING}

elif [ ${SLURM_ID} -eq ${TREATMENT__7__1} ] ; then
  SECOND_PARAM=1
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_P/
  SEED=4000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__2} ] ; then
  SECOND_PARAM=1
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_P/
  SEED=5000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__3} ] ; then
  SECOND_PARAM=1
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_P/
  SEED=6000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__4} ] ; then
  SECOND_PARAM=1
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_P/
  SEED=7000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__5} ] ; then
  SECOND_PARAM=1
  DUMP=/mnt/home/herna383/Diagnostics/DIAGNOSTICS-DATA-10-21/FITSHARING_P/
  SEED=33000
  DIAGNOSTIC=${MULTIVALLEY_CROSSING}
  SELECTION=${FITSHARING}

else
  echo "${SEED} failed to launch" >> /mnt/ls15/scratch/users/herna383/ps-coh-failtolaunch.txt
fi

####################################################################

# final seed calculation
FINAL_SEED=$((SEED_OFFSET + SEED))

# make a dump directory
mkdir -p ${DUMP}

echo "python3 ../Collector/max-val-collect.py ${DATA_DIR} ${DUMP} ${SELECTION} ${DIAGNOSTIC} ${FINAL_SEED} ${OBJECTIVE_CNT} ${ACCURACY_DIR} ${GENERATIONS} ${SECOND_PARAM}  > run.log" > ./cmd-coh.txt

python3 ../Collector/max-val-collect.py ${DATA_DIR} ${DUMP} ${SELECTION} ${DIAGNOSTIC} ${FINAL_SEED} ${OBJECTIVE_CNT} ${ACCURACY_DIR} ${GENERATIONS} ${SECOND_PARAM}
