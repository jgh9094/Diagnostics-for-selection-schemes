#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=00:20:00              # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-28                 # number of jobs being created, each with its array id
#SBATCH --mem=1G                     # memory required per node - amount of memory (in gigs)
#SBATCH --job-name run-chk           # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab            # research group account being used

##################################
# SETUP RELEVANT DIRECTORIES
##################################
DATA_DIR=/mnt/gs21/scratch/herna383/DIAGNOSTICS-DATA-1-17-23/

##################################
# SETUP RELEVANT DIRECTORIES
##################################
SEED_OFFSET=200000
SLURM_ID=$((SLURM_ARRAY_TASK_ID))

##################################
# Setup selection scheme
##################################
TRUNCATION=0
TOURNAMENT=1
FITSHARING=2
LEXICASE=3
NONDOMINATED=4
NOVELTY=5

##################################
# Setup diagnostic
##################################
EXPLOITATION_RATE=0
ORDERED_EXPLOITATION=1
CONTRADICTORY_OBJECTIVES=2
MULTIPATH_EXPLORATION=3

##################################
# TREATMENTS
##################################

# TRUNCATION REPLICATES
TREATMENT__1__1=1
TREATMENT__1__2=2
TREATMENT__1__3=3
TREATMENT__1__4=4

# TOURNAMENTS REPLICATES
TREATMENT__2__1=5
TREATMENT__2__2=6
TREATMENT__2__3=7
TREATMENT__2__4=8

# LEXICASE REPLICATES
TREATMENT__3__1=9
TREATMENT__3__2=10
TREATMENT__3__3=11
TREATMENT__3__4=12

# NOVELTY REPLICATES
TREATMENT__4__1=13
TREATMENT__4__2=14
TREATMENT__4__3=15
TREATMENT__4__4=16

# NONDOMINATED SORTING REPLICATES
TREATMENT__5__1=17
TREATMENT__5__2=18
TREATMENT__5__3=19
TREATMENT__5__4=20

# G FITNESS SHARING REPLICATES
TREATMENT__6__1=21
TREATMENT__6__2=22
TREATMENT__6__3=23
TREATMENT__6__4=24

# P FITNESS SHARING REPLICATES
TREATMENT__7__1=25
TREATMENT__7__2=26
TREATMENT__7__3=27
TREATMENT__7__4=28

##################################
# Other variables needed
##################################
RESOLUTION=100
OBJECTIVE_CNT=100
GENERATIONS=50000
ACCURACY_DIR=99

####################################################################

if [ ${SLURM_ID} -eq ${TREATMENT__1__1} ] ; then
  SECOND_PARAM=0
  SEED=24000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__2} ] ; then
  SECOND_PARAM=0
  SEED=25000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__3} ] ; then
  SECOND_PARAM=0
  SEED=26000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${TRUNCATION}
elif [ ${SLURM_ID} -eq ${TREATMENT__1__4} ] ; then
  SECOND_PARAM=0
  SEED=27000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${TRUNCATION}

elif [ ${SLURM_ID} -eq ${TREATMENT__2__1} ] ; then
  SECOND_PARAM=0
  SEED=20000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__2} ] ; then
  SECOND_PARAM=0
  SEED=21000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__3} ] ; then
  SECOND_PARAM=0
  SEED=22000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${TOURNAMENT}
elif [ ${SLURM_ID} -eq ${TREATMENT__2__4} ] ; then
  SECOND_PARAM=0
  SEED=23000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${TOURNAMENT}

elif [ ${SLURM_ID} -eq ${TREATMENT__3__1} ] ; then
  SECOND_PARAM=0
  SEED=8000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__2} ] ; then
  SECOND_PARAM=0
  SEED=9000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__3} ] ; then
  SECOND_PARAM=0
  SEED=10000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${LEXICASE}
elif [ ${SLURM_ID} -eq ${TREATMENT__3__4} ] ; then
  SECOND_PARAM=0
  SEED=11000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${LEXICASE}

elif [ ${SLURM_ID} -eq ${TREATMENT__4__1} ] ; then
  SECOND_PARAM=0
  SEED=16000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__2} ] ; then
  SECOND_PARAM=0
  SEED=17000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__3} ] ; then
  SECOND_PARAM=0
  SEED=18000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${NOVELTY}
elif [ ${SLURM_ID} -eq ${TREATMENT__4__4} ] ; then
  SECOND_PARAM=0
  SEED=19000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${NOVELTY}

elif [ ${SLURM_ID} -eq ${TREATMENT__5__1} ] ; then
  SECOND_PARAM=0
  SEED=12000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__2} ] ; then
  SECOND_PARAM=0
  SEED=13000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__3} ] ; then
  SECOND_PARAM=0
  SEED=14000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${NONDOMINATED}
elif [ ${SLURM_ID} -eq ${TREATMENT__5__4} ] ; then
  SECOND_PARAM=0
  SEED=15000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${NONDOMINATED}

elif [ ${SLURM_ID} -eq ${TREATMENT__6__1} ] ; then
  SECOND_PARAM=0
  SEED=0
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__2} ] ; then
  SECOND_PARAM=0
  SEED=1000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__3} ] ; then
  SECOND_PARAM=0
  SEED=2000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__6__4} ] ; then
  SECOND_PARAM=0
  SEED=3000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${FITSHARING}

elif [ ${SLURM_ID} -eq ${TREATMENT__7__1} ] ; then
  SECOND_PARAM=1
  SEED=4000
  DIAGNOSTIC=${EXPLOITATION_RATE}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__2} ] ; then
  SECOND_PARAM=1
  SEED=5000
  DIAGNOSTIC=${MULTIPATH_EXPLORATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__3} ] ; then
  SECOND_PARAM=1
  SEED=6000
  DIAGNOSTIC=${ORDERED_EXPLOITATION}
  SELECTION=${FITSHARING}
elif [ ${SLURM_ID} -eq ${TREATMENT__7__4} ] ; then
  SECOND_PARAM=1
  SEED=7000
  DIAGNOSTIC=${CONTRADICTORY_OBJECTIVES}
  SELECTION=${FITSHARING}

else
  echo "${SEED} failed to launch" >> /mnt/ls15/scratch/users/herna383/ps-coh-failtolaunch.txt
fi

####################################################################

# final seed calculation
FINAL_SEED=$((SEED_OFFSET + SEED))

echo "python3 run-checker.py ${DATA_DIR} ${SELECTION} ${DIAGNOSTIC} ${FINAL_SEED} ${OBJECTIVE_CNT} ${ACCURACY_DIR} ${GENERATIONS} ${SECOND_PARAM}  > run.log" > ./cmd-coh.txt

python3 run-checker.py ${DATA_DIR} ${SELECTION} ${DIAGNOSTIC} ${FINAL_SEED} ${OBJECTIVE_CNT} ${ACCURACY_DIR} ${GENERATIONS} ${SECOND_PARAM}
